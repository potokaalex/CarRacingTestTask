Load order: BootstrapLoader(optional) -> ProjectInstaller -> BootstrapInstaller -> AutoStartupperGlobal -> ProjectLoadState -> 

Naming: 
    Gameplay:
        Model - contains data
        Controller - contains data, logic
    UI:
        Model - contains data like in Mvx
        Presenter - contains business logic like in mvP 
        UIElement - like view in mVx
        
TODO
    gameplay:
        game over screen: give cash for drift points, double reward button (IronSource Reward Ad with callback)
    Refactoring: assetProviders! нет никакого смысла в использовании object->controller для колёс (правда нету ?)
    Refactoring: eventSystem
    Refactoring: notAsyncStates!
    garage:
        select level menu: offline level, online level
        cash view
        customization menu: upgrade car color & spoiler
        IAP shop menu: buy coins, buy car spoiler
        - at last! settings menu: (sound check, optional!)
    Global: 
        Save System: save cash, car customizations, settings.
        Online (Photon): OnlineLevel , sync between players (position, customization )
        Optimization: Texture compression, Occlusion Culling, lights optimizations - bake, “void Update() / void FixedUpdate()” optimizations
    Optional:
        Engine sound system, 
        Levels design
        Online sync between players (rotation wheels, steering, engine sound)
        Leaderboard in room (All players drift points)
        Web request (ex: get image from url and place on car body, or ex: stream radio music into the game)
        

Discarded:
        Important car shop
        Optional SDKs: Facebook SDK, FirebaseSDK, IAP SDK, GameAnalytics SDK    
        Optional tyres sound system